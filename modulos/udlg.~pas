unit udlg;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Mask, DBCtrls, StdCtrls, ExtCtrls, jpeg, Buttons, RLReport, DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset;

type
  Tfdlg = class(TForm)
    Panel2: TPanel;
    imflag: TImage;
    lt1: TLabel;
    lt2: TLabel;
    btnok: TSpeedButton;
    btnsair: TSpeedButton;
    imrodape: TImage;
    StaticText1: TStaticText;
    L1: TLabel;
    l2: TLabel;
    pbox: TPanel;
    mk: TMaskEdit;
    mk2: TMaskEdit;
    procedure btnokClick(Sender: TObject);
    procedure btnsairClick(Sender: TObject);
    procedure mkKeyPress(Sender: TObject; var Key: Char);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
  box,tpdlg:integer;
    { Private declarations }
  public

    { Public declarations }

   constructor Create(AOwner: TComponent; msg:string; tpdlg_, box_:integer); reintroduce;
  end;

var
  fdlg: Tfdlg;

implementation

uses funcoes,udm;
{$R *.dfm}



constructor Tfdlg.Create(AOwner: TComponent; msg:string; tpdlg_,box_:integer);
begin

          Inherited Create(AOwner);

          l2.Caption := msg;
          l2.AutoSize := true;
          l2.AutoSize := false;
          l2.Width := 352;

          tpdlg := tpdlg_;
          box:=box_;
          vf:= false;

          Height := Height + l2.Height-14;


             if btcadastrar = nil then
                if fileexists(ExtractFilePath(ParamStr(0)) + 'imagem\btcadastrar.bmp') then
                   imflag.Picture.LoadFromFile(pchar(ExtractFilePath(ParamStr(0)) + 'imagem\btcadastrar.bmp'));


          if idlg <> nil then
             imageform('imt', altop, self, '',idlg)
          else if fileexists(ExtractFilePath(ParamStr(0)) + 'imagem\idlg.jpg') then
             imageform('imt', altop, self, pchar(ExtractFilePath(ParamStr(0)) + 'imagem\idlg.jpg'),nil);

          if menucadR <> nil then
             imrodape.Picture := menucadR.Picture
          else if fileexists(ExtractFilePath(ParamStr(0)) + 'imagem\menucadr.jpg') then
             imrodape.Picture.LoadFromFile(pchar(ExtractFilePath(ParamStr(0)) + 'imagem\menucadr.jpg'));

          lt1.Caption := application.Title;
          lt2.Caption := application.Title;

          if tpdlg = 0 then begin

             if btcadastrar <> nil then
                imflag.Picture.Assign(btcadastrar);

             l1.Caption := 'Atenção';
             btnsair.Hide;
             btnok.Caption := '&OK';
             caption := 'Informação';

          end else if (tpdlg = 1) or (tpdlg = 2) then begin

             if tpdlg = 1 then
                l2.Caption := 'Deseja excluir?';

             if btmenu <> nil then
                imflag.Picture.Assign(btmenu);
             l1.Caption := 'Confirme';
             caption := 'Responda';



          //3 para caixa de dialogo
          end else if tpdlg = 3 then begin

             if codloc<>'' then  mk.Text := codloc;

             codloc :='';
             if btcadastrar <> nil then  imflag.Picture.Assign(btcadastrar);

             l1.Caption := 'Confirme';
             Caption := 'Confirme os dados';

             pbox.Show;
             Height := Height + pbox.Height;


             if (box_ = 1) or (box_ = 3) then begin

                if uppercase(copy(msg,1,4))='HORA' then begin
                   mk.editmask := '99:99:99';
                   mk2.editmask := '99:99:99';
                   mk.Text := timetostr(now);

                end else begin
                   mk.editmask := '99/99/9999';
                   mk.Text := datetostr(now);
                end;
             end;

             if box_ = 3 then begin
                if uppercase(copy(msg,1,4))='HORA' then  mk2.Text := timetostr(now)
                                                   else  mk2.Text := datetostr(now);
             end;

             if box_ >= 1 then begin
                mk.Left := 146;
                mk.Width := 90;
             end;

             if (box_ = 4) or (lowercase(copy(msg,1,14))='digite a senha') then
                mk.PasswordChar :='*';
             mk2.Visible := box_=3;

             box := box_;



          //4 para senha gerencial
          end else if tpdlg = 4 then begin
             if btcadastrar <> nil then
                imflag.Picture.Assign(btcadastrar);
             l1.Caption := 'Senha Gerencial';
             Caption := 'Confirme a senha';
             pbox.Show;
             Height := Height + pbox.Height;
             mk.PasswordChar :='*';
          end;

          codloc :='';
end;





procedure Tfdlg.btnokClick(Sender: TObject);
begin

        close;

end;

procedure Tfdlg.btnsairClick(Sender: TObject);
var
senha,motivosenha:string;

begin

        //valida a data
        if uppercase(copy(l2.Caption,1,4))<>'HORA' then begin
            if (tpdlg = 3) and ((box = 1) or(box = 3)) then
               if strisdate(mk.Text)= false then
                  msg('#A data não é válida',0);

            //valida a data
            if (tpdlg = 3) and (box = 3) then
               if strisdate(mk2.Text)= false then
                  msg('#A data não é válida',0);
        end;


        //senha gerencial
        if tpdlg = 4  then begin


           if (not strisinteger(mk.Text)) or (not senhai(strtoint(mk.Text))) then begin

               selecione('select senhagerencial from tbconfig');
               senha := sqlpub.fieldbyname('senhagerencial').AsString;

               if (senha <> mk.Text) and (box=0) then msg('#Senha incorreta!!!',0);

               if (senha <> mk.Text) and (box=-1) then begin
                  selecione('select senha from tbusuario where senha ='+  quotedstr(mk.Text));
                  senha := sqlpub.fieldbyname('senha').asstring;

                 if sqlpub['senha'] = null then msg('#Senha Incorreta!!!',0);

           end;

             //motivosenha := msgi('Digite o motivo da senha.',0);

           end;
        end;



        // retorna o valor string
        if (tpdlg = 3) and (box=3) then
           codloc := mk.Text + mk2.Text

        else if (tpdlg = 3) and (box<>3) then
           codloc := mk.Text
             else if (tpdlg = 4) and (box=0) then
                    valorconfig := mk.Text;


        vf:=true;
        close;
end;

procedure Tfdlg.mkKeyPress(Sender: TObject; var Key: Char);
begin
        if box = 2 then
           if not (key in ['0'..'9', #8,'-', ',']) then abort;

        if key = #27 then close;


end;

procedure Tfdlg.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
        if (key=13) and (box<>3) then
           if tpdlg = 0 then btnokClick(self)
           else btnsairClick(self);

         //data periodo
        if (key=13) and (box=3) and (mk2.Visible) and (mk2.Text <> '  /  /    ') then
           btnsairClick(self);
           
        if (key = 40) then
           Perform(wm_nextdlgctl, 0,0);

        if (key = 38) then
           Perform(wm_nextdlgctl, 0,0);

        if (key = 27) then close;


end;

end.
